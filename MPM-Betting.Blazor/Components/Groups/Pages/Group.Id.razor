@page "/Groups/{GroupId:int}"
@using Microsoft.AspNetCore.Authorization
@using MPM_Betting.Blazor.ComponentLibrary.Core
@using MPM_Betting.DataModel.User
@using MPM_Betting.Services
@using MPM_Betting.Services.Domains
@using Color = Blazorise.Color
@using Position = Blazorise.Position
@using Margin = Blazorise.Margin
@using Size = MudBlazor.Size
@using Blazorise
@using Width = Blazorise.Width

@attribute [Authorize]

@inject UserDomain UserDomain
@inject NavigationManager NavigationManager
@inject IServiceProvider ServiceProvider

<div class="group-view">
    @if (m_GroupResult.IsSuccess)
    {
        <div class="side-nav">
            <Dropdown Class="m-0">
                <DropdownToggle Class="m-0 p-0" TextColor="TextColor.Light">
                    <div class="group-title flex flex-row">
                        <img src="@(m_GroupResult.Value.group.ProfilePictureUrl ?? "images/coin.png")"
                             class="ml-3 mt-3 mb-2 mr-2" alt="group logo"/>
                        <div class="mt-3 mx-2">@m_GroupResult.Value.group.Name</div>
                        <i class="m-2 my-3">
                            <MudIcon Icon="@Icons.Material.Filled.ArrowDropDown"></MudIcon>
                        </i>
                    </div>
                </DropdownToggle>
                <DropdownMenu Class="bg-dark mt-2" Margin="Margin.Is2.FromStart" Width="Width.Px(235)">
                    <DropdownItem TextColor="TextColor.Light">
                        <div class="flex flex-row align-content-space-between">
                            <div>Users</div>
                            <MudIcon Class="ml-auto" Icon="@Icons.Material.Filled.SupervisedUserCircle" Size="Size.Small"></MudIcon>
                        </div>
                    </DropdownItem>
                    <DropdownItem TextColor="TextColor.Light">
                        <div class="flex flex-row align-content-space-between">
                            <div>Insights</div>
                            <MudIcon Class="ml-auto" Icon="@Icons.Material.Filled.Insights" Size="Size.Small"></MudIcon>
                        </div>
                    </DropdownItem>
                    @if (m_GroupResult.Value.entry.Role is EGroupRole.Admin or EGroupRole.Owner)
                    {
                        <DropdownItem TextColor="TextColor.Light">
                            <div class="flex flex-row align-content-space-between">
                                <div>Settings</div>
                                <MudIcon Class="ml-auto" Icon="@Icons.Material.Filled.Settings" Size="Size.Small"></MudIcon>
                            </div>
                        </DropdownItem>
                    }
                    <DropdownDivider/>
                    @if (m_GroupResult.Value.entry.Role is EGroupRole.Admin or EGroupRole.Owner)
                    {
                        <DropdownItem TextColor="TextColor.Light">
                            <div class="flex flex-row align-content-space-between">
                                <div>Add Season</div>
                                <MudIcon Class="ml-auto" Icon="@Icons.Material.Filled.Add" Size="Size.Small"></MudIcon>
                            </div>
                        </DropdownItem>
                        <DropdownDivider/>
                    }
                    <DropdownItem TextColor="TextColor.Danger">
                        <div class="flex flex-row align-content-space-between">
                            <div>Report Group</div>
                            <MudIcon Class="ml-auto" Icon="@Icons.Material.Filled.Report" Size="Size.Small"></MudIcon>
                        </div>
                    </DropdownItem>
                    <DropdownItem TextColor="TextColor.Danger">
                        <div class="flex flex-row align-content-space-between">
                            <div>Leave Group</div>
                            <MudIcon Class="ml-auto" Icon="@Icons.Material.Filled.ExitToApp" Size="Size.Small"></MudIcon>
                        </div>
                    </DropdownItem>
                    @if (m_GroupResult.Value.entry.Role is EGroupRole.Admin or EGroupRole.Owner)
                    {
                        <DropdownItem TextColor="TextColor.Danger">
                            <div class="flex flex-row align-content-space-between">
                                <div>Delete Group</div>
                                <MudIcon Class="ml-auto" Icon="@Icons.Material.Filled.Delete" Size="Size.Small"></MudIcon>
                            </div>
                        </DropdownItem>
                    }
                </DropdownMenu>
            </Dropdown>


            <div class="list m-2">

                <MudDivider Class="mb-3"/>
                
                <div class="flex flex-row py-1 px-2">
                    <MudIcon Class="mr-auto" Icon="@Icons.Material.Outlined.BarChart" Size="Size.Small"></MudIcon>
                    <div>Overview</div>
                </div>
                <div class="flex flex-row py-1 px-2">
                    <MudIcon Class="mr-auto" Icon="@Icons.Material.Outlined.Score" Size="Size.Small"></MudIcon>
                    <div>Ranking</div>
                </div>
                <div class="flex flex-row py-1 px-2">
                    <MudIcon Class="mr-auto" Icon="@Icons.Material.Outlined.Chat" Size="Size.Small"></MudIcon>
                    <div>Chat</div>
                </div>

                <MudDivider Class="my-3"/>

                <div class="flex flex-row align-content-space-between py-1 px-2">
                    <div>Premier League</div>
                    <MudIcon Class="ml-auto" Icon="@Icons.Material.Outlined.Star" Size="Size.Small"></MudIcon>
                </div>
                <div class="flex flex-row align-content-space-between py-1 px-2">
                    <div>Some other league</div>
                    <MudIcon Class="ml-auto" Icon="@Icons.Material.Outlined.StarOutline" Size="Size.Small"></MudIcon>
                </div>
                <div class="flex flex-row align-content-space-between py-1 px-2">
                    <div>Custom League</div>
                    <MudIcon Class="ml-auto" Icon="@Icons.Material.Outlined.StarOutline" Size="Size.Small"></MudIcon>
                </div>

                <MudDivider Class="my-3"/>
            </div>

            <div>

            </div>
        </div>
    }
    else
    {
        <p>Failed to load group id:@GroupId</p>
        <p>@m_GroupResult.Exception</p>
        <p>@m_GroupResult.Exception.Message</p>
    }
</div>

@code {
    [Parameter] public int GroupId { get; set; } = default!;

    [CascadingParameter] private SyncContextWithPayload<MpmUser>? User { get; set; }
    MpmUser? m_UserInstance;

    MpmResult<(MpmGroup group, UserGroupEntry entry)> m_GroupResult;

    private bool m_ShowTitleDropdown = false;

    protected override async Task OnInitializedAsync()
    {
        if (User is null) return;
        await User.SyncEvent.Task;
        if (User.Payload is not null)
            m_UserInstance = User.Payload;

        if (m_UserInstance is null)
        {
            NavigationManager.NavigateTo("/account/login");
            return;
        }

        UserDomain.SetUser(m_UserInstance);

        await OnParametersSetAsync();
    }

    protected override async Task OnParametersSetAsync()
    {
        if (m_UserInstance is null) return;

        using var scope = ServiceProvider.CreateScope();
        var userDomain = scope.ServiceProvider.GetRequiredService<UserDomain>();
        userDomain.SetUser(m_UserInstance);
        m_GroupResult = await userDomain.GetGroupByIdWithAccess(GroupId);
        StateHasChanged();
    }

}