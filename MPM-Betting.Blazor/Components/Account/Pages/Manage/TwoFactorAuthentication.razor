@page "/Account/Manage/TwoFactorAuthentication"

@using BlazorApp1.Components.Account
@using Microsoft.AspNetCore.Http.Features
@using Microsoft.AspNetCore.Identity
@using MPM_Betting.DataModel.User

@inject UserManager<MpmUser> UserManager
@inject SignInManager<MpmUser> SignInManager
@inject IdentityUserAccessor UserAccessor
@inject IdentityRedirectManager RedirectManager

<PageTitle>Two-factor authentication (2FA)</PageTitle>

<h3>Two-factor authentication (2FA)</h3>
@if (m_CanTrack)
{
    if (m_Is2FaEnabled)
    {
        if (m_RecoveryCodesLeft == 0)
        {
            <div class="alert alert-danger">
                <strong>You have no recovery codes left.</strong>
                <p>You must <a href="Account/Manage/GenerateRecoveryCodes">generate a new set of recovery codes</a> before you can log in with a recovery code.</p>
            </div>
        }
        else if (m_RecoveryCodesLeft == 1)
        {
            <div class="alert alert-danger">
                <strong>You have 1 recovery code left.</strong>
                <p>You can <a href="Account/Manage/GenerateRecoveryCodes">generate a new set of recovery codes</a>.</p>
            </div>
        }
        else if (m_RecoveryCodesLeft <= 3)
        {
            <div class="alert alert-warning">
                <strong>You have @m_RecoveryCodesLeft recovery codes left.</strong>
                <p>You should <a href="Account/Manage/GenerateRecoveryCodes">generate a new set of recovery codes</a>.</p>
            </div>
        }

        if (m_IsMachineRemembered)
        {
            <form style="display: inline-block" @formname="forget-browser" @onsubmit="OnSubmitForgetBrowserAsync" method="post">
                <AntiforgeryToken/>
                <button type="submit" class="btn btn-primary">Forget this browser</button>
            </form>
        }

        <a href="Account/Manage/Disable2fa" class="btn btn-primary">Disable 2FA</a>
        <a href="Account/Manage/GenerateRecoveryCodes" class="btn btn-primary">Reset recovery codes</a>
    }

    <h4>Authenticator app</h4>
    @if (!m_HasAuthenticator)
    {
        <a href="Account/Manage/EnableAuthenticator" class="btn btn-primary">Add authenticator app</a>
    }
    else
    {
        <a href="Account/Manage/EnableAuthenticator" class="btn btn-primary">Set up authenticator app</a>
        <a href="Account/Manage/ResetAuthenticator" class="btn btn-primary">Reset authenticator app</a>
    }
}
else
{
    <div class="alert alert-danger">
        <strong>Privacy and cookie policy have not been accepted.</strong>
        <p>You must accept the policy before you can enable two factor authentication.</p>
    </div>
}

@code {
    private bool m_CanTrack;
    private bool m_HasAuthenticator;
    private int m_RecoveryCodesLeft;
    private bool m_Is2FaEnabled;
    private bool m_IsMachineRemembered;

    [CascadingParameter] private HttpContext HttpContext { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        var user = await UserAccessor.GetRequiredUserAsync(HttpContext);
        m_CanTrack = HttpContext.Features.Get<ITrackingConsentFeature>()?.CanTrack ?? true;
        m_HasAuthenticator = await UserManager.GetAuthenticatorKeyAsync(user) is not null;
        m_Is2FaEnabled = await UserManager.GetTwoFactorEnabledAsync(user);
        m_IsMachineRemembered = await SignInManager.IsTwoFactorClientRememberedAsync(user);
        m_RecoveryCodesLeft = await UserManager.CountRecoveryCodesAsync(user);
    }

    private async Task OnSubmitForgetBrowserAsync()
    {
        await SignInManager.ForgetTwoFactorClientAsync();

        RedirectManager.RedirectToCurrentPageWithStatus(
            "The current browser has been forgotten. When you login again from this browser you will be prompted for your 2fa code.",
            HttpContext);
    }

}